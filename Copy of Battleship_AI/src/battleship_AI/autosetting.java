package battleship_AI;

public class autosetting {
	public int[][] autoset(int[][] board) {
//		int width;
//		int a, b, i, j;
//		
//		width = (int) (Math.random()*2);
//		switch (width) {
//		case 0:
//			do{
//			a = (int) (Math.random() * 10);
//			b = (int) (Math.random() * (10-size));
//			}while(!check_space(a,b,id,board));
//			for (j = 0; j < size; j++)
//				board[a][b++] = id;
//			
//			i = (b-size-1);
//			if ( (b-size-1) < 0)
//				i = 0;
//			if ( a-1 >= 0) {
//				for (; i < b; i++)
//					board[a-1][i] = 11;
//			}
//			i = a-1;
//			if (a-1 < 0)
//				i = 0;
//			if (b <= 9) {
//				for (; i < a+1; i++)
//					board[i][b] = 11;
//			}
//			i = b;
//			if (b > 9)
//				i = 9;
//			if ( a+1 <= 9) {
//				for (; i > (b-size-1); i--) {
//					board[a+1][i] = 11;
//				}
//			}
//			i = a+1;
//			if (a+1 > 9)
//				i = 9;
//			if ((b-size-1) >= 0) {
//				for (; i > (b-size-1); i--)
//					board[i][(b-size-1)] = 11;
//			}
//			
////			for(i=0;i<10;i++)
////			{
////				for(j=0;j<10;j++)
////				{
////					System.out.printf("%5d", board[i][j]);
////				}
////				System.out.println("\n");
////			}
//		
//			break;
//			
//		case 1:
//			do{
//			a = (int) (Math.random() * 10);
//			b = (int) (Math.random() * (10-size));
//			}while(!check_space(b,a,id,board));
//			for (j = 0; j < size; j++)
//				board[b++][a] = id;
//	
//			i = a - 1;
//			if (a - 1 < 0)
//				i = 0;
//			if ((b-size-1) >= 0) {
//				for (; i < a + 1; i++)
//					board[(b-size-1)][i] = 11;
//			}
//			i = (b-size-1);
//			if ((b-size-1) < 0)
//				i = 0;
//			if (a + 1 <= 9) {
//				for (; i < b; i++)
//					board[i][a + 1] = 11;
//			}
//			i = a + 1;
//			if (a + 1 > 9)
//				i = 9;
//			if (b <= 9) {
//				for (; i > a - 1; i--) {
//					board[b][i] = 11;
//				}
//			}
//			i = b;
//			if (b > 9)
//				i = 9;
//			if (a - 1 >= 0) {
//				for (; i > (b-size-1); i--)
//					board[i][a - 1] = 11;
//			}
//			break;
//		}
		  int sample1[][] = new int[][]
                {{0,7,0,0,0,0,0,0,0,0},{0,0,0,0,6,0,0,0,0,0},{0,0,8,0,6,0,0,0,2,0},{9,0,0,0,0,0,0,0,2,0},{0,0,0,0,0,0,0,0,2,0},{0,0,5,5,0,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,3},{0,4,0,0,0,0,1,0,0,3},{0,4,0,0,0,0,1,0,0,3},{0,0,0,10,0,0,1,0,0,0}};
          
          int sample2[][] = new int[][]
                {{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,2,0},{0,0,0,0,0,0,0,0,2,0},{7,0,0,0,3,3,3,0,2,0},{0,0,0,0,0,0,0,0,0,0},{0,8,0,0,0,0,1,1,1,1},{0,0,0,0,9,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{4,4,0,10,0,5,5,0,6,0},{0,0,0,0,0,0,0,0,6,0}};
          
          int sample3[][] = new int[][]
                {{0,0,4,4,0,0,0,2,0,0},{0,0,0,0,0,0,0,2,0,7},{0,0,5,5,0,8,0,2,0,0},{9,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,6,6,0,0,0,0},{0,1,0,0,0,0,0,0,3,0},{0,1,0,0,0,0,0,0,3,0},{0,1,0,0,0,0,0,0,3,0},{0,1,0,0,0,10,0,0,0,0}};
          
          int sample4[][] = new int[][]
                {{0,0,0,0,0,0,0,0,0,7},{2,2,2,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,1},{0,0,0,0,0,0,0,0,0,1},{0,0,10,0,3,3,3,0,0,1},{9,0,0,0,0,0,0,0,0,1},{0,0,0,0,0,4,0,0,0,0},{0,6,0,0,0,4,0,0,0,0},{0,6,0,0,0,0,0,0,0,0},{0,0,0,0,5,5,0,0,8,0}};
          
          int sample5[][] = new int[][]
                {{7,0,0,0,0,0,9,0,0,0},{0,0,0,0,0,0,0,0,0,0},{8,0,0,0,0,0,0,4,4,0},{0,0,0,0,0,0,0,0,0,0},{2,2,2,0,0,0,0,0,5,5},{0,0,0,0,10,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,1,1,1,1,0,0,0,6,0},{0,0,0,0,0,0,0,0,6,0},{0,0,0,3,3,3,0,0,0,0}};
          
          int sample6[][] = new int[][]
                {{0,7,0,0,0,0,0,0,6,0},{0,0,0,2,2,2,0,0,6,0},{0,0,0,0,0,0,0,0,0,0},{4,0,0,5,0,0,0,0,0,8},{4,0,0,5,0,10,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,1,0},{9,0,0,0,0,0,0,0,1,0},{0,0,0,3,3,3,0,0,1,0},{0,0,0,0,0,0,0,0,1,0}};
          
          int sample7[][] = new int[][]
                {{0,0,0,0,0,0,0,0,10,0},{0,7,0,0,0,0,0,0,0,0},{0,0,0,0,0,2,2,2,0,0},{0,0,1,0,0,0,0,0,0,0},{0,0,1,0,0,0,0,6,6,0},{0,0,1,0,0,5,0,0,0,0},{0,0,1,0,0,5,0,0,0,0},{0,0,0,0,0,0,0,0,9,0},{0,4,4,0,0,0,0,0,0,0},{0,0,0,8,0,0,0,3,3,3}};
          
          int sample8[][] = new int[][]
                {{0,0,0,0,0,0,0,0,7,0},{0,0,0,0,0,0,0,0,0,0},{0,1,1,1,1,0,0,2,2,2},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,10,0,0,0,4,4,0,0,5},{0,0,0,0,0,0,0,0,0,5},{0,3,3,3,0,0,8,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,6,6,0,9}};
          
          int sample9[][] = new int[][]
                {{10,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,2,0,0,8},{0,9,0,0,0,0,2,0,0,0},{0,0,0,6,0,0,2,0,7,0},{0,3,0,6,0,0,0,0,0,0},{0,3,0,0,0,0,0,0,1,0},{0,3,0,0,0,4,4,0,1,0},{0,0,0,0,0,0,0,0,1,0},{0,0,0,0,5,5,0,0,1,0},{0,0,0,0,0,0,0,0,0,0}};
          
          int sample10[][] = new int[][]
                {{0,4,0,7,0,0,0,0,0,0},{0,4,0,0,0,0,0,0,0,0},{0,0,0,0,0,3,0,0,2,0},{0,0,0,0,0,3,0,0,2,0},{0,0,0,0,0,3,0,0,2,0},{0,0,5,5,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{9,0,8,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,6,0,0},{1,1,1,1,0,0,0,6,0,10}};
          
          switch((int)(Math.random()*10)){
             case 1:   board = sample1;   break;
             case 2:   board = sample2;   break;
             case 3:   board = sample3;   break;
             case 4:   board = sample4;   break;
             case 5:   board = sample5;   break;
             case 6:   board = sample6;   break;
             case 7:   board = sample7;   break;
             case 8:   board = sample8;   break;
             case 9:   board = sample9;   break;
             default:board = sample10;
           }
		return board;
	}
}
//	private boolean check_space(int x, int y, int id,int[][] info) {   
//	      switch(id){
//	         case 1:
//	            for(int i=-1;i<5;i++){
//	               for(int j=-1;j<2;j++){
//	                  if(x+j<0 || y+i<0 || x+j>9 || y+i>9)
//	                     continue;
//	                  else if(info[x+j][y+i]!=0 && info[x+j][y+i]!=id)
//	                     return false;
//	               }
//	            }
//	         
//	            for (int i = 0; i < 10; i++) {
//	               for (int j = 0; j < 10; j++) {
//	                  if (info[i][j] == id){
//	                     info[i][j] = 0;
//	                  }
//	               }
//	            }
//	      	            
//	            break;
//	            
//	         case 2:   case 3:
//	            for(int i=-1;i<4;i++){
//	               for(int j=-1;j<2;j++){
//	                  if(x+j<0 || y+i<0 || x+j>9 || y+i>9)
//	                     continue;
//	                  else if(info[x+j][y+i]!=0 && info[x+j][y+i]!=id)
//	                     return false;
//	               }
//	            }
//	            
//	            for (int i = 0; i < 10; i++) {
//	               for (int j = 0; j < 10; j++) {
//	                  if (info[i][j] == id){
//	                     info[i][j] = 0;
//	                  }
//	               }   
//	            }
//	            
//	            break;
//	            
//	         case 4:   case 5:   case 6:
//	            for(int i=-1;i<3;i++){
//	               for(int j=-1;j<2;j++){
//	                  if(x+j<0 || y+i<0 || x+j>9 || y+i>9)
//	                     continue;
//	                  else if(info[x+j][y+i]!=0 && info[x+j][y+i]!=id)
//	                     return false;
//	               }
//	            }
//	            
//	            for (int i = 0; i < 10; i++) {
//	               for (int j = 0; j < 10; j++) {
//	                  if (info[i][j] == id){
//	                     info[i][j] = 0;
//	                  }
//	               }
//	            }
//	           
//	            break;
//	            
//	         case 7:   case 8:   case 9:   case 10:
//	            for(int i=-1;i<2;i++){
//	               for(int j=-1;j<2;j++){
//	                  if(x+j<0 || y+i<0 || x+j>9 || y+i>9)
//	                     continue;
//	                  else if(info[x+j][y+i]!=0 && info[x+j][y+i]!=id)
//	                     return false;
//	               }
//	            }
//	            
//	            
//	            break;
//	            
//	         default:
//	            return false;
//	      }
//	      
//	      return true;
//	   }
//
//}
